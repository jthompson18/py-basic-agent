
x-app-env: &app_env
  # Default to HOST ollama; change to http://ollama:11434 when using dockerized Ollama
  OLLAMA_BASE_URL: ${OLLAMA_BASE_URL:-http://host.docker.internal:11434}
  MODEL: ${MODEL:-llama3.1:8b}
  EMBED_MODEL: ${EMBED_MODEL:-all-minilm}
  SERPER_API_KEY: ${SERPER_API_KEY}
  MAX_STEPS: ${MAX_STEPS:-8}
  TEMPERATURE: ${TEMPERATURE:-0.2}
  MEMORY_BACKEND: ${MEMORY_BACKEND:-pgvector}
  PGHOST: ${PGHOST:-pgvector}
  PGPORT: ${PGPORT:-5432}
  PGUSER: ${PGUSER:-agent}
  PGPASSWORD: ${PGPASSWORD:-agent}
  PGDATABASE: ${PGDATABASE:-agentdb}

services:
  # Optional: dockerized Ollama, only when you enable the profile
  # ollama:
  #   image: ollama/ollama:latest
  #   container_name: ollama
  #   profiles: ["ollama-docker"]
  #   ports: ["11434:11434"]
  #   volumes:
  #     - ollama:/root/.ollama
  #   healthcheck:
  #     test: ["CMD", "curl", "-sf", "http://localhost:11434/api/tags"]
  #     interval: 5s
  #     timeout: 5s
  #     retries: 20
  #   entrypoint:
  #     - /bin/sh
  #     - -lc
  #     - |
  #       ollama serve & sleep 2
  #       ollama pull ${MODEL:-llama3.1:8b}
  #       ollama pull ${EMBED_MODEL:-all-minilm}
  #       tail -f /dev/null

  pgvector:
    image: pgvector/pgvector:pg17
    container_name: py-basic-agent-pgvector
    environment:
      POSTGRES_USER: agent
      POSTGRES_PASSWORD: agentpass
      POSTGRES_DB: agentdb
    ports:
      - "5432:5432"        # optional; handy for local psql
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./app/db/schema.sql:/docker-entrypoint-initdb.d/00_schema.sql:ro
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U agent -d agentdb"]
      interval: 5s
      timeout: 3s
      retries: 30

  mcpfs:
    image: node:20-alpine
    working_dir: /srv
    environment:
      FS_MCP_ROOT: /app/data
      PORT: 8765
      ENABLE_STDIO: "0"
    volumes:
      - ./servers/fs-mcp-server:/srv
      - ./data:/app/data:rw
    command: sh -lc "npm i --omit=dev && node index.js"
    ports:
      - "8765:8765"
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "node -e \"fetch('http://localhost:8765/health').then(r=>process.exit(r.ok?0:1)).catch(()=>process.exit(1))\""]
      interval: 5s
      timeout: 3s
      retries: 10
      start_period: 5s

  app:
    build:
      context: ./app
      dockerfile: Dockerfile
    container_name: py-basic-agent-app
    environment:
      <<: *app_env
      PYTHONPATH: /app
      # Safe defaults; can be overridden in .env
      AGENT_DB_URL: ${AGENT_DB_URL:-postgresql://agent:agentpass@pgvector:5432/agentdb}
      OLLAMA_HOST: ${OLLAMA_HOST:-http://host.docker.internal:11434}
      AGENT_EMBED_MODEL: ${AGENT_EMBED_MODEL:-all-minilm}
      AGENT_EMBED_DIM: ${AGENT_EMBED_DIM:-384}
    extra_hosts:
        - "host.docker.internal:host-gateway"
    volumes:
      - ./app:/app
      - ./data:/app/data:rw
      - ./.data:/app/.data:rw
    depends_on:
      pgvector:
        condition: service_healthy
      mcpfs:
        condition: service_started
    stdin_open: true
    tty: true

volumes:
  pgdata:
  # ollama:
